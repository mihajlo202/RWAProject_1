Asihrono vs Sinhrono
sinhrono znaci da se nesto izvrsava korak po korak tj jedno u toku vremena 
Asihrono znaci da moze vise stvari da se izvrse istovremeno
dok se cekaju podaci sa servera mozemo da radimo nesto drugo

promise je funkcija koja ima resolve i reject kao parametre
ako funkcija uspe vraca resolve ako ne vraca reject
let p = new Promise(()={})

p.then((message)=>{
    //ovde ide resolve
}).catch((message)=>{
    //ovde ide reject
})
dobri su kad radi sa api 

1)- Fetch - dohvatiti, doneti
fetch je asinron
interfejs za dohvatanje resursa
Fetch je funkcija sa 2 argumenta,
prvi parametar je adresa gde se nalazi resurs
drugi parametar je CRUD
Fetch vraca promise, samim tim mozemo da koristimo async
fetch uvek uspeva

function pera(str, fun)
{
    pritnf("str");
    fun(str);
}

pera("zika",function(el){
    pritnf("Pera i "+el);
})


async function doWordk()
{
    //ako hocemo da uznemo resolve iz funkcije kucamo await inace ce vrati promise
}

 // createItem(el,parent:HTMLDivElement)
    // {
 
    //     let taskItem = document.createElement("div");
    //     taskItem.className = "taskItem";
    //     parent.appendChild(taskItem);

    //     let leftDiv = document.createElement("div");
    //     leftDiv.className = "leftDiv"
    //     taskItem.appendChild(leftDiv);

    //     let pom = document.createElement("h1");
    //     pom.innerText = el.title;
    //     pom.style.cursor = "pointer";
    //     pom.onclick =()=>{
    //         this.ShowModal(el,parent);
    //     }
    //     pom.style.fontFamily = "Arial, Helvetica"
    //     pom.style.color = "yellowgreen"
    //     leftDiv.appendChild(pom);
        
    //     let pom1 = document.createElement("img");
    //     pom1.src = "./resources/decor.png";
    //     leftDiv.appendChild(pom1);



    //     pom = document.createElement("p");
    //     pom.innerText = el.description;
    //     pom.style.fontFamily = "Arial, Helvetica";
    //     leftDiv.appendChild(pom);

    //     pom = document.createElement("h5");
    //     pom.innerText ="Datum pocetka: "+el.dateOpen;
    //     pom.style.fontFamily = "Arial, Helvetica";
    //     leftDiv.appendChild(pom);

    //     pom = document.createElement("h5");
    //     pom.innerText ="Datum ocekivanog zavrsetka: "+el.dateClosed;
    //     pom.style.fontFamily = "Arial, Helvetica";
    //     leftDiv.appendChild(pom);

    //     pom = document.createElement("h5");
    //     pom.innerText ="Kontakt telefon: "+el.phone;
    //     pom.style.fontFamily = "Arial, Helvetica";
    //     leftDiv.appendChild(pom);

    //     let rightDiv = document.createElement("div")
    //     rightDiv.className = "rightDiv"
    //     taskItem.appendChild(rightDiv);

    //     let pic = document.createElement("img");
    //     pic.src = `./resources/icons/${el.taskid}.png`;
    //     pic.style.width = "100px";
    //     pic.style.height = "100px"
    //     rightDiv.appendChild(pic);
        
    // }